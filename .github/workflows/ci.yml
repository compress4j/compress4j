name: CI
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

permissions:
  contents: read
  actions: write

jobs:
  build-ubuntu-21:
    name: Build (Ubuntu JDK 21)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: 'Set up JDK 21'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'gradle'

      - name: Check Java version
        run: java -version
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: ./gradlew build --continue --no-daemon --scan
      - name: Upload Test reports
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-latest-jdk_21-test-reports # Specific artifact name for JDK 21
          path: |
            build/test-results/**/*.xml
            build/jacoco/

  build-ubuntu-25:
    name: Build (Ubuntu JDK 25)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: 'Set up JDK 25'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 25
          cache: 'gradle'

      - name: Check Java version
        run: java -version
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: ./gradlew build --continue --no-daemon --scan
      # No artifact upload for this job as it's not needed for Sonar

  build-other-os:
    name: Build (${{ matrix.operating-system }} JDK ${{ matrix.java-version }})
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ macos-latest, windows-latest ]
        java-version: [ 21, 25 ]

    steps:
      - name: Set git config for long paths
        if: matrix.operating-system == 'windows-latest'
        run: |
          git config --system core.longpaths true
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: 'Set up JDK ${{ matrix.java-version }}'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          cache: 'gradle'

      - name: Check Java version
        run: java -version
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: ./gradlew build --continue --no-daemon --scan
      # No artifact upload needed for these OS

  configure_sonar:
    runs-on: ubuntu-latest
    needs:
      - build-ubuntu-21
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Trigger Sonar
        run: |
          echo Triggerring Sonar
          GIT_REF=${{ github.ref_name }}
          if [ '${{github.event_name}}' == 'pull_request' ]; then
            GIT_REF=${{ github.head_ref }}
          fi
          
          gh workflow run --ref $GIT_REF sonar.yml \
            -f runId=${{ github.run_id }} \
            -f eventName=${{github.event_name}} \
            -f prNumber=${{ github.event.number }} \
            -f baseRef=${{github.base_ref}} \
            -f headRef=${{github.head_ref}} \
            -f jdk_version=21
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
